---
title: "Heart Attact"
author: "Tymoteusz Romanowicz, Patryk Tokarski"
format: html
editor: visual
embed-resources: true
execute: 
  warning: false
editor_options: 
  chunk_output_type: inline
---

## Źródło danych

### Zawartość zbioru:

Dane do zbioru były zbierane podczas transportu karetką do szpitala pacjentów, którzy podejrzewali u siebie obecność zawału serca. Zawał mięśnia sercowego, potocznie zwany atakiem serca to martwica mięśnia sercowego spowodowana jego niedokrwieniem wskutek zamknięcia tętnicy wieńcowej doprowadzającej krew do serca.[^1] W europie choroby układu krążenia są najczęstszą przyczyną zgonów. Z powodu schorzeń sercowo-naczyniowych w tym zawału mięśnia sercowego, umiera dwa razy więcej osób niż z powodu chorób nowotworowych.[^2] Zbiór danych zawiera 1319 obserwacji i 9 cech, z czego jedna odnosi się do obecności ataku serca.

[^1]: <https://web.archive.org/web/20150224034615/http://www.nhlbi.nih.gov/health/health-topics/topics/cad/signs>

[^2]: <https://ec.europa.eu/eurostat/web/products-statistics-in-focus/-/ks-nk-06-010>

Wiek, płeć, tętno, skurczowe ciśnienie tętnicze, rozkurczowe ciśnienie tętnicze, poziom cukru we krwi, CK-MB (kineaza kreatynowa) i troponina reprezentują pola wejściowe, podczas gdy pole wyjściowe odnosi się do obecności zawału serca, który jest podzielone na dwie kategorie (0 i 1); "0" odnosi się do braku zawału serca, podczas gdy "1" odnosi się do obecności zawału serca.

### Przedstawienie zmiennych: opis jakie są i co znaczą

| Cecha                    | Opis                                                                                                           |
|----------------------|--------------------------------------------------|
| Age                      | Wiek pacjenta w latach                                                                                         |
| Gender                   | Płeć pacjenta (0 - kobieta, 1 - mężczyzna)                                                                     |
| Heart Rate               | Maksymalne osiągnięte tętno                                                                                    |
| Systolic blood pressure  | Spoczynkowe skurczowe ciśnienie krwi (w mmHg, podczas dojazdu do szpitala) (normalne wartości 90-120 mmHg)     |
| Diastolic blood pressure | Spoczynkowe rozkurczowe ciśnienie krwi (w mmHg, podczas dojazdu do szpitala) (normalne wartości od 60-80 mmHg) |
| Blood sugar              | Poziom cukru we krwi (nonalne wartości do 140mg/dl)                                                            |
| CK-MB                    | Enzym CK-MB (mężczyźni do 7,8 ng/mL, kobiety do 4,4 ng/mL). Jest to enzym kinazy kreatynowej.                  |
| Troponin                 | Enzym troponiny (wartości normalne do 0,03 mikrogramów)                                                        |
| Result                   | Obecność zawału                                                                                                |

: Cechy i ich opisy

## Cele badawcze

-   Opracowanie modelu predykcyjnego, który na podstawie danych o pacjencie (wiek, płeć, tętno, ciśnienie krwi, poziom cukru we krwi, CK-MB, troponina), przewiduje czy miał zawał serca.

-   Dokonanie segmentacji pacjentów, aby zidentyfikować grupy pacjentów o podobnym ryzyku wystąpienia zawału serca.

-   Używając technik wizualizacji danych wykryć wzorce i nietypowe zachowania w zbiorze danych, a także lepiej zrozumieć rozkłady poszczególnych zmiennych.

## Przygotowanie zbioru / weryfikacja poprawnosci danych / brakujace wartosci

caly kod którym porządkujemy dane, zmieniamy wartosci na factor, może dzielimy wiek na sekcje (18-25, 26-50)
```{r}
library(tidyverse)
library(foreign)

df <- read.arff("data/Medicaldataset.arff")
df <- df %>% rename(
  "Age" = age,
  "Gender" = gender,
  "Heart Rate" = impluse,
  "Systolic.blood.pressure" = pressurehight,
  "Diastolic.blood.pressure" = pressurelow,
  "Blood.sugar" = glucose,
  "CK.MB" = kcm,
  "Troponin" = troponin,
  "Result" = class
)
```

```{r}
df <- df[df$`Heart Rate` != 1111, ]

df$Result <- ifelse(df$Result == "positive", "Positive", "Negative")
df$Gender <- ifelse(df$Gender == 1, "Male", "Female")

df$Gender <- as.factor(df$Gender)
df$Result <- as.factor(df$Result)
```


## Opis zbioru

/ statystyczna analiza opisowa - summary, statystyki opisowe



```{r}
library(pander)
pander(summary(df))
```

```{r}
library(rstatix)
df %>% get_summary_stats(show = c("min", "median", "mean", "max"))
```

Widoczna lewa asymetria histogramu wieku.
```{r}
library(ggpubr)
df %>% gghistogram(x="Age", fill="Result")
```

#TODO można sprawdzić test na równość średnich dla wieku obu płci
```{r}
df %>% ggplot(aes(y=Age,fill=Gender))+
  geom_boxplot()
```

```{r}
df %>% ggplot(aes(y=Diastolic.blood.pressure, fill=Result))+
  geom_boxplot()
```
#TODO test na równość tego czy procent pozytywnych przypadków jest równy ze względu na płeć.
```{r}
df %>% group_by(Gender) %>% 
  summarise(n=n(), "Percent of Positive"=round(sum(Result=="Positive")/n(),2))
```


## Wizualizacja

## Analiza korespondencji

sprawdzic czy nam to potrzebne <https://www.statsoft.pl/textbook/stathome_stat.html?https%3A%2F%2Fwww.statsoft.pl%2Ftextbook%2Fstcoran.html>

## Model

### Wybór modelu - wypisac ktory moze byc najlepszy

### stworzenie modelu

### trening modelu

### testowanie modelu

### Podsumowanie efektywności modelu / jego przydatności

## Odpowiedź na pytania badawcze i podsumowanie

Pierwsze 6 wierszy:

```{r}
head(df)

```

Wykrycie obserwacji odstających:

```{r}
library(rstatix)
names(df)
zmienne <- c("Age", "Diastolic.blood.pressure")
identify_outliers(df["Troponin"])

```

```{r}
library(corrplot)
library(knitr)
library(PerformanceAnalytics)

chart.Correlation(df[,c(1,3:8)])
corrplot(cor(df[,c(1,3:8)]))
```


#TODO Przeniesc Czyszczenie

```{r}
tail(df[df$CK.MB>=300, ])
```

```{r}
sample <- sample(c(TRUE, FALSE), nrow(df), replace=TRUE, prob=c(0.7,0.3))
test   <- df[!sample, ]
df  <- df[sample, ]


model <- glm(Result~log(CK.MB)+log(Troponin), family = 'binomial', data = df)

summary(model)

probs <- predict(model, newdata = test, type = "response")
pred <- rep(0, length(probs))
pred[probs > .5] <- 1
table(pred, test$Result)
```

Dalex - paczka do wyjasniania modelu

```{r}
library(DALEX)
#explainer <- explain(model, data = test[-9], y = test[9])
#explainer %>% model_performance()

#explainer %>% feature_importance() %>% plot()
#explainer %>% model_performance()  %>% plot()

```

install.packages("devtools")

devtools::install_github("ModelOriented/ArenaR")

install.packages("arenar")

library(arenar) heart_attack_ar \<- create_arena(live = TRUE) %\>% push_model(explainer) %\>% push_observations(test) run_server(heart_attack_ar)
