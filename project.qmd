---
title: "Heart Attact"
author: "Tymoteusz Romanowicz, Patryk Tokarski"
format: html
editor: visual
embed-resources: true
execute: 
  warning: false
editor_options: 
  chunk_output_type: console
---

## Źródło danych

### Zawartość zbioru:

Dane do zbioru były zbierane podczas transportu karetką do szpitala pacjentów, którzy podejrzewali u siebie obecność zawału serca. Zawał mięśnia sercowego, potocznie zwany atakiem serca to martwica mięśnia sercowego spowodowana jego niedokrwieniem wskutek zamknięcia tętnicy wieńcowej doprowadzającej krew do serca. W Europie choroby układu krążenia są najczęstszą przyczyną zgonów. Z powodu schorzeń sercowo-naczyniowych w tym zawału mięśnia sercowego, umiera dwa razy więcej osób niż z powodu chorób nowotworowych. Zbiór danych zawiera 1319 obserwacji i 9 cech, z czego jedna odnosi się do obecności ataku serca.

Wiek, płeć, tętno, skurczowe ciśnienie tętnicze, rozkurczowe ciśnienie tętnicze, poziom cukru we krwi, CK-MB (kineaza kreatynowa) i troponina reprezentują pola wejściowe, podczas gdy pole wyjściowe odnosi się do obecności zawału serca, który jest podzielone na dwie kategorie (0 i 1); "0" odnosi się do braku zawału serca, podczas gdy "1" odnosi się do obecności zawału serca.

### Przedstawienie zmiennych: opis jakie są i co znaczą

| Cecha                    | Opis                                                                                                           |
|------------------|------------------------------------------------------|
| Age                      | Wiek pacjenta w latach                                                                                         |
| Gender                   | Płeć pacjenta (0 - kobieta, 1 - mężczyzna)                                                                     |
| Heart Rate               | Maksymalne osiągnięte tętno (za prawidłowe tętno uznaje się przedział od 60 do 100 uderzeń serca na minutę)    |
| Systolic blood pressure  | Spoczynkowe skurczowe ciśnienie krwi (w mmHg, podczas dojazdu do szpitala) (normalne wartości 90-120 mmHg)     |
| Diastolic blood pressure | Spoczynkowe rozkurczowe ciśnienie krwi (w mmHg, podczas dojazdu do szpitala) (normalne wartości od 60-80 mmHg) |
| Blood sugar              | Poziom cukru we krwi (normalne wartości do 140mg/dl)                                                           |
| CK-MB                    | Enzym CK-MB (mężczyźni do 7,8 ng/mL, kobiety do 4,4 ng/mL). Jest to enzym kinazy kreatynowej.                  |
| Troponin                 | Enzym troponiny (wartości normalne do 0,03 mikrogramów)                                                        |
| Result                   | Obecność zawału (0 - brak zawału, 1 - zawał)                                                                   |

: Cechy i ich opisy

## Cele badawcze

-   Opracowanie modelu predykcyjnego, który na podstawie danych o pacjencie (wiek, płeć, tętno, ciśnienie krwi, poziom cukru we krwi, CK-MB, troponina), przewiduje czy miał on zawał serca.

-   Dokonanie segmentacji pacjentów, aby zidentyfikować grupy pacjentów o podobnym ryzyku wystąpienia zawału serca.

-   Używając technik wizualizacji danych wykryć wzorce i nietypowe zachowania w zbiorze danych, a także lepiej zrozumieć rozkłady poszczególnych zmiennych.

## Przygotowanie zbioru / weryfikacja poprawnosci danych / brakujace wartosci

```{r}
library(tidyverse)
library(foreign)

# wczytanie zbioru
df <- read.arff("data/Medicaldataset.arff")
df <- df %>% rename(
  "Age" = age,
  "Gender" = gender,
  "Heart Rate" = impluse,
  "Systolic.blood.pressure" = pressurehight,
  "Diastolic.blood.pressure" = pressurelow,
  "Blood.sugar" = glucose,
  "CK.MB" = kcm,
  "Troponin" = troponin,
  "Result" = class
)
```

```{r}
hist(df$`Heart Rate`)
df[df$`Heart Rate`>400, ]
```

Występują trzy obserwacje, w których tętno wynosi 1111. Normalne tętno wynosi maksymalnie 100 uderzeń serca na minutę więc są to nieprawidłowe dane, najprawdopodobniej spowodowane błędem przy wpisywaniu danych, które należy usunąć.

```{r}
#czyszczenie zbioru, zamiana wartosci na factor
df <- df[df$`Heart Rate` != 1111, ]

str(df)

df$Result <- ifelse(df$Result == "positive", 1, 0)

df$Gender <- as.factor(df$Gender)
df$Result <- as.factor(df$Result)
```

## Opis zbioru

Cechy jakościowe:

```{r}
library(pander)
pander(summary(df[c("Gender", "Result")]))
```

Cechy ilościowe:

```{r}
library(rstatix)
df %>% get_summary_stats(show = c("min", "median","mean", "sd", "max")) %>% select(-n) %>%  pander()
```

## Wizualizacja

Histogram wieku z podziałem na płeć oraz obecność ataku serca. Wyraźnie widać, że rozkład mężczyzn z atakiem serca (lewy dolny histogram) przypomina rozkład normalny. Natomiast pozostałe 3 wykresy są do siebie podobne i także przypominają rozkład normalny, tylko z o wiele mniejszą kurtozą.

```{r}
ggplot(df, aes(x = Age)) +
  geom_histogram(binwidth = 5, color = "black", fill = "#aeaeae", boundary=1) +
    scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  facet_grid(Gender ~ Result) +
  labs(title = "Age Distribution by Gender and Result", x = "Age", y = "Frequency")
```

#TODO można sprawdzić test na równość średnich dla wieku obu płci

```{r}
df %>% filter(Result=="Positive")%>%  ggplot(aes(y=Age,fill=Gender))+
  geom_boxplot()
```

#TODO poprawić output Test na równość średnich wieku kobiet i mężczyzn w zbiorze:

```{r}
wiek_mezczyzn <- df %>% filter(Gender==1, Result==1) %>% select(Age)
wiek_kobiet <- df %>% filter(Gender==0,Result==1) %>% select(Age)
t.test(wiek_mezczyzn, wiek_kobiet)
```

```{r}
df %>% group_by(Gender) %>% 
  summarise(n=n(), "Percent of Positive"=round(sum(Result==1)/n(),2))
```

Na podstawie testu chi-kwadrat jak i test proporcjonalności odrzucamy hipotezę o rowności procenta pozytywnych przypadków ataku serca ze względu na płeć. Wynika z tego, że większą szansę na atak serca mają mężczyźni.

```{r}
# Tworzenie tablicy przestawnej
table <- table(df$Gender, df$Result)

# Przeprowadzenie testu proporcji (z testem chi-kwadrat)
result_prop_test <- prop.test(table)
chi_square_test <- chisq.test(table)

data.frame("Proportion test"=round(result_prop_test$p.value,3),
           "Chi-Square test"=round(chi_square_test$p.value,3)) %>% pander()
```

### Wykres zależności CK.MB od Troponiny z podziałem na pacjentów z zawałem i bez

```{r}
ggplot(df, aes(x = CK.MB, y = Troponin, col = factor(Result))) + geom_point() +
  scale_color_manual(values = c("0" = "blue", "1" = "red")) + 
  labs(x = "CK.MB", y = "Troponin", col = "Result") + scale_x_continuous(limits = c(0, 10)) + scale_y_continuous(limits = c(0, 1)) + theme_minimal()
```

## Model

### Wybór modelu - wypisac ktory moze byc najlepszy

### stworzenie modelu

### trening modelu

### testowanie modelu

### Podsumowanie efektywności modelu / jego przydatności

## Odpowiedź na pytania badawcze i podsumowanie

Wykrycie obserwacji odstających:

```{r}
library(rstatix)
names(df)
zmienne <- c("Age", "Diastolic.blood.pressure")
identify_outliers(df["Troponin"])

```

```{r}
library(corrplot)
library(knitr)
library(PerformanceAnalytics)

chart.Correlation(df[,c(1,3:8)])
corrplot(cor(df[,c(1,3:8)]))
```

GLM założenia: - Homogeneity of variance - levene test - Normality of residuals - shapiro-wilk

```{r}
tail(df[df$CK.MB>=300, ])
```

```{r}
sample <- sample(c(TRUE, FALSE), nrow(df), replace=TRUE, prob=c(0.7,0.3))
test   <- df[!sample, ]
df  <- df[sample, ]


model <- glm(Result~log(CK.MB)+log(Troponin), family = 'binomial', data = df)

summary(model)

probs <- predict(model, newdata = test, type = "response")
pred <- rep(0, length(probs))
pred[probs > .5] <- 1
table(pred, test$Result)
```

Dalex - paczka do wyjasniania modelu

```{r}
library(DALEX)
#explainer <- explain(model, data = test[-9], y = test[9])
#explainer %>% model_performance()

#explainer %>% feature_importance() %>% plot()
#explainer %>% model_performance()  %>% plot()

```

install.packages("devtools")

devtools::install_github("ModelOriented/ArenaR")

install.packages("arenar")

library(arenar) heart_attack_ar \<- create_arena(live = TRUE) %\>% push_model(explainer) %\>% push_observations(test) run_server(heart_attack_ar)

## Model drzewa decyzyjnego

### Biblioteki

```{r message=FALSE}
library(foreign)
library(dplyr)
library(caret)
library(rpart)
library(rattle)
```

### Przygotowanie danych

```{r}
df <- read.arff("Data/Medicaldataset.arff")

df <- df %>% rename(
  "Age" = age,
  "Gender" = gender,
  "Heart Rate" = impluse,
  "Systolic.blood.pressure" = pressurehight,
  "Diastolic.blood.pressure" = pressurelow,
  "Blood.sugar" = glucose,
  "CK.MB" = kcm,
  "Troponin" = troponin,
  "Result" = class
)


df <- df[df$`Heart Rate` != 1111, ]

df$Result <- ifelse(df$Result == "positive", 1, 0)
str(df)
```

### Podział zbioru na treningowy i testowy

```{r}
podzial <- createDataPartition(y = df$Result, 
                               times = 1, 
                               p = 0.7, 
                               list = F)

train <- df[podzial, ]
test <- df[-podzial, ]
```

### Trenowanie modelu

```{r}
model <- rpart(Result ~ ., method = "class", data = train)

fancyRpartPlot(model, caption = "")
```

### Testowanie dokładności modelu na zbiorze testowym

```{r}
model_test <- predict(model, test)
model_test <- as.data.frame(model_test)

model_test <- model_test %>% 
  mutate(Result = ifelse(`0` >= .5, 0, 1))

table(test$Result, model_test$Result)
```
